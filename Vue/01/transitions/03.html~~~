<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <title>Vue transitions & transform learming</title>
        <link rel="stylesheet" href="../../public/css/animate.min.css">
        <script src="../../vue.min.js"></script>
        <!--  -->
        <script src="../../public/js/velocity.min.js"></script>
        <!-- lodash 是一个一致性、模块化、高性能的 JavaScript 实用工具库。 -->
        <script src="../../public/js/lodash.min.js"></script>
    </head>

    <body>
        <!-- FLIP 动画不仅可以实现单列过渡，多维网格同样可以过渡 -->
        <div id="e1">
            <button @click="shuffle">Shuffle</button>
            <transition-group name="cell" tag="div" class="sudoku-container">
                <div 
                    v-for="cell in cells"
                    v-bind:key="cell.id"
                    class="cell"
                >
                    {{ cell.number }}
                </div>
            </transition-group>
        </div>
        <script>
            var e1 = new Vue({
                el: '#e1',
                data: {
                    cells: Array.apply(null, {length: 81})
                                .map(function (_, index) {
                                    return {
                                        id: index,
                                        number: index % 9 + 1,
                                    };
                                }),
                },
                methods: {
                    shuffle: function () {
                        this.cells = _.shuffle(this.cells);
                    },
                },
            });
        </script>
        <style>
            #e1 .sudoku-container {
                display: flex;
                flex-wrap: wrap;
                width: 238px;
                margin-top: 10px;
            }
            #e1 .cell {
                display: flex;
                justify-content: space-around;
                align-items: center;
                width: 25px;
                height: 25px;
                border: 1px solid #aaa;
                margin-right: -1px;
                margin-bottom: -1px;
            }
            #e1 .cell:nth-child(3n) {
                margin-right: 0;
            }
            #el .cell:nth-child(27n) {
                margin-bottom: 0;
            }
            #e1 .cell-move {
                transition: transform 1s;
            }
        </style>
    </body>
</html>