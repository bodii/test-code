<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <title>Vue transitions & transform learming</title>
        <link rel="stylesheet" href="../../public/css/animate.min.css">
        <script src="../../vue.min.js"></script>
        <!--  -->
        <script src="../../public/js/velocity.min.js"></script>
        <!-- lodash 是一个一致性、模块化、高性能的 JavaScript 实用工具库。 -->
        <script src="../../public/js/lodash.min.js"></script>
    </head>
    <body>
        <!-- 列表交错过渡 -->
        <div id="e1">
            <input v-model="query">
            <transition-group
                name="staggered-fade"
                tag="ul"
                v-bind:css="false"
                v-on:before-enter="beforeEnter"
                v-on:enter="enter"
                v-on:leave="leave"
            >
                <li 
                    v-for="(item, index) in computedList"
                    v-bind:key="item.msg"
                    v-bind:data-index="index"
                >{{ item.msg }}</li>
            </transition-group>
        </div>
        <script>
            var e1 = new Vue({
                el: '#e1',
                data: {
                    query: '',
                    list: [
                        { msg: 'Bruce Lee' },
                        { msg: 'Jackie Chan' },
                        { msg: 'Chuck Norris' },
                        { msg: 'Jet Li' },
                        { msg: 'Kung Fury' },
                    ],
                },
                computed: {
                    computedList: function () {
                        var vm = this;
                        return this.list.filter(function (item) {
                            return item.msg
                                        .toLowerCase()
                                        .indexOf(vm.query.toLowerCase()) !== -1;
                        });
                    },
                },
                methods: {
                    beforeEnter: function (el) {
                        el.style.opacity = 0;
                        el.style.height = 0;
                    },
                    enter: function (el) {
                        var delay = el.dataset.index * 150;
                        setTimeout(function () {
                            Velocity(
                                el, 
                                { opacity: 1, height: '1.6em' },
                                { complete: done }
                            ), 
                            delay
                        });
                    },
                    leave: function (el, done) {
                        var delay = el.dataset.index * 150;
                        setTimeout(function () {
                            Velocity(
                                el,
                                { opacity: 0, height: 0 },
                                { complete: done }
                            ),
                            delay
                        });
                    },
                },
            });
        </script>
        <style>
            #e1 ul {
                list-style-type: none;
                margin: .3em;
                padding: 0;
                font-size: 1.2rem;
            }
        </style>
    </body>
</html>