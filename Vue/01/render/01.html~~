<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Vue render function learning</title>
    <script src="../../vue.min.js"></script>
</head>

<body>
    <!-- 渲染函数 & JSX -->
    <h1>
        <a name="hello-world" href="#hello-world">
            Hello world!
        </a>
    </h1>

    <div id="e1">
        <!-- 定义组件接口 -->
        <anchored-heading :level="1">
            Hello world!
        </anchored-heading>
    </div>
    <!-- script type="text/x-template" id="anchored-heading-template">
        <h1 v-if="level === 1">
            <slot></slot>
        </h1>
        <h2 v-else-if="level === 2">
            <slot></slot>
        </h2>
        <h3 v-else-if="level === 3">
            <slot></slot>
        </h3>
        <h4 v-else-if="level === 4">
            <slot></slot>
        </h4>
        <h5 v-else-if="level === 5">
            <slot></slot>
        </h5>
        <h6 v-else-if="level === 6">
            <slot></slot>
        </h6>
        
    </script -->
    <script>
        /*
            Vue.component('anchored-heading', {
                template: '#anchored-heading-template',
                props: {
                    level: {
                        type: Number,
                        required: true,
                    },
                },
            });
        */
        // 使用render函数重写上面的例子：
        Vue.component('anchored-heading', {
            render: function (createElement) {
                return createElement(
                    'h' + this.level,
                    this.$slots.default, // 子组件中的陈列
                );
            },
            props: {
                level: {
                    type: Number,
                    required: true,
                },
            },
        });
        var e1 = new Vue({
            el: '#e1',
        });
    </script>


    <div id="e2">
        <blog-title></blog-title>
    </div>
    <script>
        var e2 = new Vue({
            el: '#e2',
            data: {
                blogTitle: 'aaaaa',
            },
            components: {
                'blog-title': {
                    render: function (createElement) {
                        return createElement(
                            'h1', 
                            {
                                style: {
                                    color: 'red',
                                },
                            },
                            this.$root.blogTitle,
                            );
                    },
                    props: {
                        blogTitle: {
                            type: String,
                            required: true,
                        },
                    },
                    
                },
            },
            
        });
    </script>
</body>
</html>