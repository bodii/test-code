python定义了一些为模块建立文档的简单约定。遵循这些约定后，模块可以使用户以
标准的方式查看模块的文档。最基本的要求是，对于要写入文档的每一项，都要写一
个文档字符串来描述这一项。在三引号内包含这个文档字符串，并将它放到项的后面，
紧挨着它描述的项。

例如：
def makeLunch():
	''' Creates a Breakfast object.'''
	return Lunch()

三引号中的行表明这是一个文档。函数后面的文档用def语句定义。


同样可以为类建立文档：
class Meal:
	'''Holds the food and drink used in a meal...'''

将该当放到class语句的后面一行。


异常也是类。同样也可以为它们建立文档：
class SensitiveArtistException(Exception):
	'''Exception raised by an overly-sensitive artist...'''
	pass


注意，即使类中没有加入新的功能，也应该描述每个异常或类的用途。


另外，要为模块本身建立文档。方法是，在模块开始位置使用特殊的三引号文档字符
串，如下所示：
"""
Module for making meals in Python.

Import this module and then call
makeBreakfast(), makeDinner() or makeLunch().
"""
将该文档放到包含模块的文本文件的第一行。模块以概述模块用途的一行文本开始。
使用前面所示的空白行，将这一行与文档的其余行开。Python的help函数将取出一行
概述文本对其做特殊处理


通常，为每个类、方法或函数编写一至两行的文档就足够了。一般来说，文档应该告
诉用户如下事情：
1.如何调用函数或方法，包括必要的参数和将要返回的数据类型。描述默认的参数值。
2.给定类的设计目的和用途。包括如何使用类的对象。
3.调用函数或方法的必备条件。
4.类的运行带来的副作用或导致系统的哪些方面发生变化。例如，一个删除磁盘上所
有文件的方法应该在文档中说明它的功能。
5.可能发生的异常和导致异常发生的原因。



