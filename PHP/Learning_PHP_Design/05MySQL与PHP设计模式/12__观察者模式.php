<?php 
	
/*
	【 利用观察者模式构建多设备CMS 】 

	PHP 5.1.0 已内置观察者设计模式的接口。这一章中，我们会从头开始介绍观察者
	模式，先不考虑PHP提供的内置特性。不过下面首先概要介绍SplObserver接口以及
	SplSubject和SplObjectStorage接口，利用这些接口，构建PHP观察者模式简直易如
	反掌。"SPL"是标准PHP库(Standard PHP Library)的简写，这个库中包括一组解决
	标准问题的接口和类。

	观察者模式的类图很详细，模型-视图-控制器(Model-View-Controller, MVC)模式
	中推崇的很多特性都可以在观察者模式中找到（你甚至认为这个模式是MVC的一种
	替代模式）。观察者模式的核心在于Subject和Observer接口。Subject包含一个给
	定的状态，观察者"订阅"这个主题，将主题的当前状态通知观察者。可以认为它是
	一个博客，有很多订阅者，会定期地为订阅或定期阅读博客的各类用户更新一组信
	息。每次博客改变时（其状态改变），所有订阅者“都会得到通知”。

	这个模式最有意思（也是最复杂）的特性之一是Subject的方法。“Subject”用斜体
	表示这是一个接口（这里就是一个抽象类）。

	设计观察者模式是为了让一个对象跟踪某个状态，知道状态何时改变，一旦状态改
	变，所有订阅都能得到通知。如果需要保证一个状态的一致性，但是这个给定状态
	可能有多个不同的视图，这种情况下观察者模式就很适用，而且很有帮助。利用观
	察者模式，可以维护一致性，同时记录创建一个给定状态的对象的个数。
*/
