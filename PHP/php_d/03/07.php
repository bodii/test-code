<?php


# 设计模式作用、范围和变化
/*

作用      范围      模式名         可能变化的方面
创建型     类       工厂方法        实例化对象的子类
          对象      原型          实例化对象的类

结构型     类       类适配器        对象的接口
          对象      对象适配器      对象职责而不派生子类
                   装饰器

行为型      类       模板方法        算法中的步骤
           对象      状态           对象状态
           对象      策略           算法
           对象      职责链          可以满足请求的对象
           对象      观察者          依赖于其他对象的对象数;当前可以有多少个依赖对象

*/

// 每次做出改变时都重写整个程序相比，使用松耦合的设计模式肯定更胜一筹。所以，
// 你会发现循环结构有很多不同的用法和实现，类似地，你也会发现很多不同的设计模式实现。

# 与框架相比，设计模式是体系结构中更小的元素，也更为抽象。另外，设计模式没有框架那么
# 特定。因此，设计模式更可重用，也比框架更灵活。

# 框架  的优点与模板有些类似，它们更有指示性，可以更清楚地指示所解决问题的结构。
# 使用框架，构建应用会快得多，但是所构建的应用会受到框架本身的约束。框架可以包含
# 面向对象结构，通常框架是分层的，每一层处理更大设计中的一方面。
